int longestSubSeg(vector<int> &arr , int n, int k){
    // Write your code here.
    int left=0;
    int maxlen=0;
    int count=0;

    for(int right=0;right<n;right++)
    {
     if(arr[right]==0)
     count++;

     while (count > k) {
     if (arr[left] == 0)
       count--;

           left++;
     }
     maxlen = max(maxlen, right - left + 1);
    }
    return maxlen;
}




//using single pointer--> leetcode

class Solution {
public:
    int findMaxConsecutiveOnes(vector<int>& nums) {
       int count=0;
       int n=nums.size();
       int maxLen=0;
       for(int i=0;i<n;i++) 
       {
        if(nums[i]==1)
        {count++;
        maxLen=max(maxLen,count);}
        else if(nums[i]==0)
        {maxLen=max(maxLen,count);
        count=0;}
       }
       return maxLen;
    }
    
};
